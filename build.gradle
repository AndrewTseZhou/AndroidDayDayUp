// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.7.10'

    repositories {
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/releases" }

        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        // 添加emas-services插件
        classpath 'com.aliyun.ams:emas-services:1.0.1'
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.10'
        classpath 'com.jakewharton:butterknife-gradle-plugin:10.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath 'me.ele:lancet-plugin:1.0.6'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
        maven { url "https://maven.aliyun.com/nexus/content/repositories/releases" }

        google()
        //Bmob的maven仓库地址
//        maven {
//            url "https://raw.github.com/bmob/bmob-android-sdk/master"
//        }
    }
}

def applicationModules = ['app']
def libraryModules = ['aidlserver', 'openCVLibrary']
def javaModules = []

subprojects {
    switch (project.name) {
        case applicationModules:
            apply plugin: 'com.android.application'
            break
        case libraryModules:
            apply plugin: 'com.android.library'
            break
        case javaModules:
            apply plugin: 'java'
            return
        default:
            break
    }

    android {
        compileSdkVersion 31
        buildToolsVersion '31.0.0'
        ndkVersion "21.4.7075529"

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 31
            versionCode 1
            versionName "1.0"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
            debug {
                jniDebuggable true
            }
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
